name: Terraform CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  prepare-env:
    name: Prepare Env
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      AWS_REGION: ${{ steps.vars.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ steps.vars.outputs.AWS_ACCOUNT_ID }}
      EKS_CLUSTER: ${{ steps.vars.outputs.EKS_CLUSTER }}
      K8S_NAMESPACE: ${{ steps.vars.outputs.K8S_NAMESPACE }}
    
    steps:
      - id: vars
        run: |
          echo "AWS_REGION=us-east-2" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID=842675998483" >> $GITHUB_OUTPUT
          echo "EKS_CLUSTER=CI-CD" >> $GITHUB_OUTPUT
          echo "K8S_NAMESPACE=kube-system" >> $GITHUB_OUTPUT

  terraform:
    runs-on: ubuntu-latest
    needs: prepare-env
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::842675998483:role/GitHubActionsRole
          aws-region: us-east-2
          role-session-name: GitHubActionsSession

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version here

      - name: Configure Terraform backend
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'  # Only apply on main branch
        run: terraform apply -auto-approve tfplan
