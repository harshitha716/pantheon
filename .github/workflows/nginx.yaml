name: Terraform plan

on:
  workflow_dispatch:

jobs:
  prepare-env:
    name: Prepare Env
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      AWS_REGION: ${{ steps.vars.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ steps.vars.outputs.AWS_ACCOUNT_ID }}
      EKS_CLUSTER: ${{ steps.vars.outputs.EKS_CLUSTER }}
      K8S_NAMESPACE: ${{ steps.vars.outputs.K8S_NAMESPACE }}
    steps:
      - id: vars
        run: |
          echo "AWS_REGION=us-east-2" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID=842675998483" >> $GITHUB_OUTPUT
          echo "EKS_CLUSTER=CI-CD" >> $GITHUB_OUTPUT
          echo "K8S_NAMESPACE=pantheon" >> $GITHUB_OUTPUT
          
      - name: Output Branch name
        run: |
          echo ":seedling: Branch:${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY

  Terraform:
    needs:
      - prepare-env
    name: Build and Push Image
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ needs.prepare-env.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: 'Set up AWS credentials using OIDC'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession    

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version here

      - name: Configure Terraform backend
        run: terraform init ./terraform

      - name: Validate Terraform configuration
        run: terraform validate ./terraform

      - name: Terraform Format Check
        run: terraform fmt -check ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan ./terraform
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'  # Only apply on main branch
        run: terraform apply -auto-approve tfplan ./terraform
