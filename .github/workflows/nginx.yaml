name: Terraform Plan

on:
  workflow_dispatch:

jobs:
  prepare-env:
    name: Prepare Env
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      AWS_REGION: ${{ steps.vars.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ steps.vars.outputs.AWS_ACCOUNT_ID }}
      EKS_CLUSTER: ${{ steps.vars.outputs.EKS_CLUSTER }}
      K8S_NAMESPACE: ${{ steps.vars.outputs.K8S_NAMESPACE }}
    steps:
      - id: vars
        run: |
          echo "AWS_REGION=us-east-2" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=842675998483" >> $GITHUB_ENV
          echo "EKS_CLUSTER=CI-CD" >> $GITHUB_ENV
          echo "K8S_NAMESPACE=pantheon" >> $GITHUB_ENV

      - name: Output Branch name
        run: |
          echo ":seedling: Branch:${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY

  Terraform-Plan:
    needs:
      - prepare-env
    name: Generate Terraform Plan
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ needs.prepare-env.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: 'Set up AWS credentials using OIDC'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession    

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version here

      - name: Change directory and Configure Terraform backend with S3
        run: |
          cd terraform/aws/aws-base/uae
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "your-existing-terraform-state-bucket"
              key    = "path/to/terraform.tfstate"
              region = "${{ env.AWS_REGION }}"
            }
          }
          EOF
          terraform init

      - name: Change directory and Validate Terraform configuration
        run: |
          cd terraform/aws/aws-base/uae
          terraform validate

      - name: Change directory and Terraform Format Check
        run: |
          cd terraform/aws/aws-base/uae
          terraform fmt -check

      - name: Generate Terraform Plan
        run: |
          cd terraform/aws/aws-base/uae
          terraform plan -out=tfplan
          terraform show -json tfplan > plan.json
          

  Manual-Approval:
    runs-on: ubuntu-latest
    needs: Terraform-Plan
    steps:
      - name: Request manual approval
        run: |
          echo "Manual approval is required to proceed with Terraform Apply."

      - name: Pause for manual approval
        uses: peter-evans/approve-pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          approval_required: true  # Optional: Will pause until approval is given

  Terraform-Apply:
    needs:
      - Manual-Approval
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ needs.prepare-env.outputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: 'Set up AWS credentials using OIDC'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ needs.prepare-env.outputs.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession    

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version here

      - name: Change directory and Configure Terraform backend with S3
        run: |
          cd terraform/aws/aws-base/uae
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "your-existing-terraform-state-bucket"
              key    = "path/to/terraform.tfstate"
              region = "${{ env.AWS_REGION }}"
            }
          }
          EOF
          terraform init

      - name: Change directory and Apply Terraform Plan
        run: |
          cd terraform/aws/aws-base/uae
          terraform apply -auto-approve terraform/aws/aws-base/uae/plan.json
